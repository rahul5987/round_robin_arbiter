`timescale 1ns/1ps

module Round_robin_arbiter_tb;
  reg clk;
  reg reset;
  reg [3:0]req;
  wire [3:0]out;
  
Round_robin_arbiter_fixed DUT(.clk(clk), .reset(reset), .req(req), .out(out));
    
 always #5 clk= ~clk;
    
 initial begin
  clk = 0;
  reset = 0;
  req = 4'b0;
  
  #5 reset=1;
   
   @(negedge clk)req = 4'b0001;
   @(negedge clk)req = 4'b0010;
   @(negedge clk)req = 4'b0011;
   @(negedge clk)req = 4'b0100;
   @(negedge clk)req = 4'b0101;
   @(negedge clk)req = 4'b0110;
   @(negedge clk)req = 4'b0111;
   @(negedge clk)req = 4'b1000;
   @(negedge clk)req = 4'b1001;
   @(negedge clk)req = 4'b1010;
   
  
  #5 reset = 0;
  
  #100 $finish;
 end
    
 initial begin
  
  $dumpfile("dump.vcd");
  $dumpvars();
  end
    
endmodule
